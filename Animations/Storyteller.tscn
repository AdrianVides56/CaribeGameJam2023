[gd_scene load_steps=9 format=2]

[ext_resource path="res://Scripts/CutsceneController.gd" type="Script" id=1]
[ext_resource path="res://Background/Clouds/Clouds 2/3.png" type="Texture" id=2]
[ext_resource path="res://Background/Clouds/Clouds 2/4.png" type="Texture" id=3]
[ext_resource path="res://Background/Clouds/Clouds 1/1.png" type="Texture" id=4]
[ext_resource path="res://Fonts/Storyteller.tres" type="Theme" id=5]

[sub_resource type="Animation" id=2]
resource_name = "PopUp"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/RichTextLabel:percent_visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0.8, 0.8 ), Vector2( 0.8, 0.8 ) ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite/RichTextLabel:visible_characters")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite/RichTextLabel:percent_visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.657986, 0.672839 ) ]
}

[sub_resource type="CanvasItemMaterial" id=4]
blend_mode = 2

[node name="Node2D" type="Node2D"]
script = ExtResource( 1 )
hasImage = true
imageToDisplay = ExtResource( 2 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/PopUp = SubResource( 2 )
anims/RESET = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 4 )
position = Vector2( 296, 151 )
scale = Vector2( 0.657986, 0.672839 )
texture = ExtResource( 4 )

[node name="TextureRect" type="TextureRect" parent="Sprite"]
anchor_left = 0.238786
anchor_top = 0.0733946
anchor_right = 0.759619
anchor_bottom = 0.604259
margin_left = -288.0
margin_top = -162.0
margin_right = -288.0
margin_bottom = -162.0
texture = ExtResource( 3 )
expand = true
__meta__ = {
"_edit_use_anchors_": true
}

[node name="RichTextLabel" type="RichTextLabel" parent="Sprite"]
anchor_left = 0.0572917
anchor_top = 0.641975
anchor_right = 0.944444
anchor_bottom = 0.969136
margin_left = -288.0
margin_top = -162.0
margin_right = -288.0
margin_bottom = -162.0
rect_min_size = Vector2( 300, 60 )
theme = ExtResource( 5 )
text = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
__meta__ = {
"_edit_use_anchors_": true,
"_editor_description_": ""
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_Animation_finished"]
[connection signal="animation_started" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_started"]
